// <auto-generated />
using System;
using FantasyGame.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FantasyGame.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230331125859_Time seed")]
    partial class Timeseed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FantasyGame.Models.Data.Entities.Campeonato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRealizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("campeonatos");
                });

            modelBuilder.Entity("FantasyGame.Models.Data.Entities.Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampeonatoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Time1Gols")
                        .HasColumnType("int");

                    b.Property<int>("Time1Id")
                        .HasColumnType("int");

                    b.Property<int>("Time2Gols")
                        .HasColumnType("int");

                    b.Property<int>("Time2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoId");

                    b.HasIndex("Time1Id");

                    b.HasIndex("Time2Id");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("FantasyGame.Models.Data.Entities.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Times");

                    b.HasData(
                        new
                        {
                            Id = 500,
                            Nome = "Internacional"
                        },
                        new
                        {
                            Id = 501,
                            Nome = "São paulo"
                        },
                        new
                        {
                            Id = 502,
                            Nome = "Flamengo"
                        },
                        new
                        {
                            Id = 503,
                            Nome = "Santos"
                        });
                });

            modelBuilder.Entity("FantasyGame.Models.Data.Entities.Partida", b =>
                {
                    b.HasOne("FantasyGame.Models.Data.Entities.Campeonato", "Campeonato")
                        .WithMany("Partidas")
                        .HasForeignKey("CampeonatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FantasyGame.Models.Data.Entities.Time", "Time1")
                        .WithMany()
                        .HasForeignKey("Time1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FantasyGame.Models.Data.Entities.Time", "Time2")
                        .WithMany()
                        .HasForeignKey("Time2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campeonato");

                    b.Navigation("Time1");

                    b.Navigation("Time2");
                });

            modelBuilder.Entity("FantasyGame.Models.Data.Entities.Campeonato", b =>
                {
                    b.Navigation("Partidas");
                });
#pragma warning restore 612, 618
        }
    }
}
